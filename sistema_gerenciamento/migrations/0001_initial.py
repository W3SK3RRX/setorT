# Generated by Django 4.2.8 on 2024-02-26 18:40

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Motorista',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=40)),
                ('telefone', models.CharField(max_length=15)),
                ('data_cadastro', models.DateField()),
                ('documentos', models.FileField(blank=True, null=True, upload_to='motoristas/documentos/')),
            ],
        ),
        migrations.CreateModel(
            name='Veiculo',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('modelo', models.CharField(max_length=40)),
                ('fabricante', models.CharField(max_length=40)),
                ('ano', models.IntegerField()),
                ('placa', models.CharField(max_length=10)),
                ('data_cadastro', models.DateField()),
                ('estado_funcionamento', models.CharField(max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='Viagem',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('destino', models.CharField(max_length=40)),
                ('data_saida', models.DateField()),
                ('data_retorno', models.DateField()),
                ('solicitante', models.CharField(default='', max_length=40)),
                ('descricao', models.TextField(max_length=100)),
                ('motorista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_gerenciamento.motorista')),
                ('veiculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_gerenciamento.veiculo')),
            ],
        ),
        migrations.CreateModel(
            name='Rota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('turno', models.CharField(choices=[('Manhã', 'Manhã'), ('Tarde', 'Tarde'), ('Noite', 'Noite')], max_length=5)),
                ('horario_saida', models.TimeField()),
                ('horario_retorno', models.TimeField()),
                ('paradas', models.TextField(help_text='Digite as paradas separadas por vírgula')),
                ('motorista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_gerenciamento.motorista')),
                ('veiculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_gerenciamento.veiculo')),
            ],
        ),
        migrations.CreateModel(
            name='Manutencao',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('data', models.DateField()),
                ('descricao_manutencao', models.TextField(max_length=100)),
                ('comprovante_manutencao', models.ImageField(upload_to='comprovantes/manutenções/')),
                ('veiculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_gerenciamento.veiculo')),
            ],
        ),
        migrations.CreateModel(
            name='Demanda',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('data', models.DateField(null=True)),
                ('horario_saida', models.TimeField(null=True)),
                ('horario_retorno', models.TimeField(null=True)),
                ('descricao', models.TextField(max_length=100, null=True)),
                ('motorista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_gerenciamento.motorista')),
                ('veiculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_gerenciamento.veiculo')),
            ],
        ),
        migrations.CreateModel(
            name='Combustivel',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('data_cadastro', models.DateField()),
                ('quantidade_abastecida', models.IntegerField()),
                ('custo', models.IntegerField()),
                ('comprovante_abastecimento', models.ImageField(upload_to='comprovantes/abastecimentos/')),
                ('veiculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_gerenciamento.veiculo')),
            ],
        ),
        migrations.CreateModel(
            name='Checklist',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('data', models.DateField()),
                ('comprovante_checklist', models.ImageField(upload_to='comprovantes/checklists/')),
                ('veiculo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sistema_gerenciamento.veiculo')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
